// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	domain "github.com/eyo-chen/expense-tracker-go/internal/domain"

	mock "github.com/stretchr/testify/mock"
)

// IconRepo is an autogenerated mock type for the IconRepo type
type IconRepo struct {
	mock.Mock
}

// GetByID provides a mock function with given fields: id
func (_m *IconRepo) GetByID(id int64) (domain.DefaultIcon, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetByID")
	}

	var r0 domain.DefaultIcon
	var r1 error
	if rf, ok := ret.Get(0).(func(int64) (domain.DefaultIcon, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(int64) domain.DefaultIcon); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(domain.DefaultIcon)
	}

	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByIDs provides a mock function with given fields: ids
func (_m *IconRepo) GetByIDs(ids []int64) (map[int64]domain.DefaultIcon, error) {
	ret := _m.Called(ids)

	if len(ret) == 0 {
		panic("no return value specified for GetByIDs")
	}

	var r0 map[int64]domain.DefaultIcon
	var r1 error
	if rf, ok := ret.Get(0).(func([]int64) (map[int64]domain.DefaultIcon, error)); ok {
		return rf(ids)
	}
	if rf, ok := ret.Get(0).(func([]int64) map[int64]domain.DefaultIcon); ok {
		r0 = rf(ids)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[int64]domain.DefaultIcon)
		}
	}

	if rf, ok := ret.Get(1).(func([]int64) error); ok {
		r1 = rf(ids)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields:
func (_m *IconRepo) List() ([]domain.DefaultIcon, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for List")
	}

	var r0 []domain.DefaultIcon
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]domain.DefaultIcon, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []domain.DefaultIcon); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.DefaultIcon)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIconRepo creates a new instance of IconRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIconRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *IconRepo {
	mock := &IconRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
